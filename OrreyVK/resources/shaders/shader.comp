#version 450

struct CelestialObj
{
	vec4 pos;
	vec4 vel;
};

// Binding 0 : Position storage buffer
layout(std140, binding = 0) buffer Pos 
{
   CelestialObj celestialObj[ ];
};

layout (local_size_x = 256) in;

layout (binding = 1) uniform UBO 
{
	float deltaT;
	int objectCount;
} ubo;

void main() 
{
  // Current SSBO index
  uint index = gl_GlobalInvocationID.x;
	// Don't try to write beyond particle count
  if (index >= ubo.objectCount) 
	return;	

  // Read position and velocity
  vec3 vPos = celestialObj[index].pos.xyz;
  vec3 vVel = celestialObj[index].vel.xyz;

  // Write back
  celestialObj[index].pos.xyz = vPos;
  celestialObj[index].vel.xyz = vVel;
}

